AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for KVS License Detection Reporting Workflow'

Parameters:
  DynamoDBTableName:
    Type: String
    Default: LicensePlateDetections
    Description: Name of the DynamoDB table created in the test.yaml template

Resources:


  # S3 bucket for Athena query results and spill location
  SpillBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
        
  # Bucket policy to allow Athena and QuickSight to access the spill bucket
  SpillBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SpillBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - athena.amazonaws.com
                - quicksight.amazonaws.com
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-quicksight-service-role-v0
            Action:
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
              - s3:PutObject
            Resource:
              - !GetAtt SpillBucket.Arn
              - !Sub ${SpillBucket.Arn}/*

  # S3 bucket for Athena query results
  AthenaQueryBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      
  # Bucket policy to allow Athena and QuickSight to access the bucket
  AthenaQueryBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AthenaQueryBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - athena.amazonaws.com
                - quicksight.amazonaws.com
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-quicksight-service-role-v0
            Action:
              - s3:GetBucketLocation
              - s3:GetObject
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:ListMultipartUploadParts
              - s3:AbortMultipartUpload
              - s3:PutObject
            Resource:
              - !GetAtt AthenaQueryBucket.Arn
              - !Sub ${AthenaQueryBucket.Arn}/*

  # AWS Glue Database for Athena
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: kvsworkshop_db
        Description: Database for KVS Workshop DynamoDB tables

  # AWS Glue Crawler to discover DynamoDB schema
  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: LicensePlateDetectionsCrawler
      Role: !GetAtt GlueRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        DynamoDBTargets:
          - Path: !Ref DynamoDBTableName
      Schedule:
        ScheduleExpression: cron(0 0 * * ? *)  # Run daily at midnight
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: LOG

  # IAM Role for Glue
  GlueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:Scan
                  - dynamodb:GetItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTableName}

  # IAM Role for Athena
  AthenaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: athena.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                  - s3:PutObject
                Resource:
                  - !GetAtt SpillBucket.Arn
                  - !Sub ${SpillBucket.Arn}/*
                  - !GetAtt AthenaQueryBucket.Arn
                  - !Sub ${AthenaQueryBucket.Arn}/*

  # IAM Role for QuickSight
  QuickSightRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: quicksight.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:AbortMultipartUpload
                  - s3:ListMultipartUploadParts
                Resource:
                  - !GetAtt AthenaQueryBucket.Arn
                  - !Sub ${AthenaQueryBucket.Arn}/*
                  - !GetAtt SpillBucket.Arn
                  - !Sub ${SpillBucket.Arn}/*

# Note: The Athena DynamoDB connector will be set up manually through the console

  # Athena Workgroup for DynamoDB queries
  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: KVSWorkshopWorkgroup
      Description: Workgroup for KVS Workshop Athena queries
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: true
        ResultConfiguration:
          OutputLocation: !Sub s3://${AthenaQueryBucket}/athena-results/
          EncryptionConfiguration:
            EncryptionOption: SSE_S3

Outputs:
  SpillBucketName:
    Description: Name of the S3 bucket for Athena spill location
    Value: !Ref SpillBucket
  SpillBucketDomainName:
    Description: Domain name of the S3 bucket for Athena spill location
    Value: !GetAtt SpillBucket.DomainName
  AthenaQueryBucketName:
    Description: Name of the S3 bucket for Athena query results
    Value: !Ref AthenaQueryBucket
  GlueDatabaseName:
    Description: Name of the Glue Database
    Value: !Ref GlueDatabase
  GlueCrawlerName:
    Description: Name of the Glue Crawler
    Value: !Ref GlueCrawler
  AthenaWorkgroupName:
    Description: Name of the Athena Workgroup
    Value: !Ref AthenaWorkgroup
  QuickSightPolicies:
    Description: Instructions for adding policies to QuickSight service role
    Value: |
      To add required permissions to the QuickSight service role:
      
      1. Open the IAM console
      2. Navigate to Roles and search for "aws-quicksight-service-role-v0"
      3. Click "Add permissions" and select "Create inline policy"
      4. Select the JSON tab
      5. Paste the following Lambda policy:
      
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": "lambda:InvokeFunction",
                  "Resource": "*"
              }
          ]
      }
      
      6. Click "Review policy"
      7. Name the policy "QuickSightLambdaAccess"
      8. Click "Create policy"
      
      9. Click "Add permissions" again and select "Create inline policy"
      10. Select the JSON tab
      11. Paste the following S3 policy:
      
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "s3:GetBucketLocation",
                      "s3:GetObject",
                      "s3:ListBucket",
                      "s3:ListBucketMultipartUploads",
                      "s3:ListMultipartUploadParts",
                      "s3:AbortMultipartUpload",
                      "s3:PutObject"
                  ],
                  "Resource": [
                      "arn:aws:s3:::*"
                  ]
              }
          ]
      }
      
      12. Click "Review policy"
      13. Name the policy "QuickSightS3Access"
      14. Click "Create policy"
  SetupInstructions:
    Description: Manual steps to complete the setup
    Value: |
      Complete the following steps to set up the Athena DynamoDB connector:
      
      1. On the Athena console, choose Data sources and catalogs in the navigation pane.
      2. Choose Create data source.
      3. In the search bar, search for and choose Amazon DynamoDB.
      4. Choose Next.
      5. Under Data source details, enter a Data source name (KVSWorkshop).
      6. Under AWS Glue Connection details, use the Browse button in Spill location in Amazon S3 to select the spill bucket created by this stack.
      7. Select the acknowledgement check box and choose Create data source.
      
      To set up QuickSight:
      1. Sign up for QuickSight if you haven't already.
      2. In QuickSight, create a new dataset.
      3. Choose Athena as the data source.
      4. Select the KVSWorkshopWorkgroup workgroup.
      5. Choose the kvsworkshop_db database and the table created by the Glue crawler.
      6. Create visualizations based on the license plate detection data.